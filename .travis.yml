language: generic

branches:
  only:
    - develop
    - main

stages:
  - Test
  - name: Deploy
    if: branch = main

jobs:
  include:
  - stage: Test
    name: "Running tests"
    before_install:
    - docker build -f dockerfile.dev -t russianbb/genesis-test .
    script:
    - docker run -e CI=true russianbb/genesis-test py.test -s ../../tests

  - stage: Deploy
    name: "Deploying to production"
    before_deploy:
    - echo "--> Starting Building Process"
    - docker --version
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - eval $(aws ecr get-login --no-include-email --region sa-east-1)
    - docker build -f deploy/dockerfile -t $APP_NAME:$TRAVIS_BUILD_ID .
    - docker tag $APP_NAME:$TRAVIS_BUILD_ID $AWS_ECR_ACCOUNT.dkr.ecr.sa-east-1.amazonaws.com/$APP_NAME:$TRAVIS_BUILD_ID
    - docker push $AWS_ECR_ACCOUNT.dkr.ecr.sa-east-1.amazonaws.com/$APP_NAME:$TRAVIS_BUILD_ID
    - docker tag $APP_NAME:$TRAVIS_BUILD_ID $AWS_ECR_ACCOUNT.dkr.ecr.sa-east-1.amazonaws.com/$APP_NAME:latest
    - docker push $AWS_ECR_ACCOUNT.dkr.ecr.sa-east-1.amazonaws.com/$APP_NAME:latest
    - openssl aes-256-cbc -K $encrypted_db2095f63ba3_key -iv $encrypted_db2095f63ba3_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
    - eval "$(ssh-agent -s)"
    - chmod 600 /tmp/deploy_rsa
    - ssh-add /tmp/deploy_rsa

    deploy:
      provider: script
      skip_cleanup: true
      script: bash ./deploy/start_deploy.sh
      on:
        branch: main
